//
//  StyleKitName.m
//  ProjectName
//
//  Created by Andres Ruggiero on 3/25/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKitName.h"


@implementation StyleKitName

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawCanvas1WithBaseCurrencyName: (NSString*)baseCurrencyName baseCurrency: (NSString*)baseCurrency exchangeRate: (NSString*)exchangeRate
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* baseColor = [UIColor colorWithRed: 0.879 green: 0.642 blue: 0.386 alpha: 1];
    UIColor* labelStringColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.609];
    UIColor* exchangeRateColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    UIColor* exchangeRateStringColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* stringColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Variable Declarations
    NSString* label = @"Currency:";

    //// Cell Drawing
    UIBezierPath* cellPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 400, 119)];
    [baseColor setFill];
    [cellPath fill];


    //// Currency Name Label Drawing
    CGRect currencyNameLabelRect = CGRectMake(21, 19, 52, 17);
    UIBezierPath* currencyNameLabelPath = [UIBezierPath bezierPathWithRect: currencyNameLabelRect];
    [baseColor setFill];
    [currencyNameLabelPath fill];
    NSMutableParagraphStyle* currencyNameLabelStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    currencyNameLabelStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* currencyNameLabelFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 10], NSForegroundColorAttributeName: labelStringColor, NSParagraphStyleAttributeName: currencyNameLabelStyle};

    CGFloat currencyNameLabelTextHeight = [label boundingRectWithSize: CGSizeMake(currencyNameLabelRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: currencyNameLabelFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, currencyNameLabelRect);
    [label drawInRect: CGRectMake(CGRectGetMinX(currencyNameLabelRect), CGRectGetMinY(currencyNameLabelRect) + (CGRectGetHeight(currencyNameLabelRect) - currencyNameLabelTextHeight) / 2, CGRectGetWidth(currencyNameLabelRect), currencyNameLabelTextHeight) withAttributes: currencyNameLabelFontAttributes];
    CGContextRestoreGState(context);


    //// Base Currency Name Input Drawing
    CGRect baseCurrencyNameInputRect = CGRectMake(73, 13, 98, 32);
    UIBezierPath* baseCurrencyNameInputPath = [UIBezierPath bezierPathWithRect: baseCurrencyNameInputRect];
    [baseColor setFill];
    [baseCurrencyNameInputPath fill];
    NSMutableParagraphStyle* baseCurrencyNameInputStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    baseCurrencyNameInputStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* baseCurrencyNameInputFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 12], NSForegroundColorAttributeName: stringColor, NSParagraphStyleAttributeName: baseCurrencyNameInputStyle};

    CGFloat baseCurrencyNameInputTextHeight = [baseCurrencyName boundingRectWithSize: CGSizeMake(baseCurrencyNameInputRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: baseCurrencyNameInputFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, baseCurrencyNameInputRect);
    [baseCurrencyName drawInRect: CGRectMake(CGRectGetMinX(baseCurrencyNameInputRect), CGRectGetMinY(baseCurrencyNameInputRect) + (CGRectGetHeight(baseCurrencyNameInputRect) - baseCurrencyNameInputTextHeight) / 2, CGRectGetWidth(baseCurrencyNameInputRect), baseCurrencyNameInputTextHeight) withAttributes: baseCurrencyNameInputFontAttributes];
    CGContextRestoreGState(context);


    //// Currency Label Drawing
    CGRect currencyLabelRect = CGRectMake(21, 53, 37, 13);
    UIBezierPath* currencyLabelPath = [UIBezierPath bezierPathWithRect: currencyLabelRect];
    [baseColor setFill];
    [currencyLabelPath fill];
    {
        NSString* textContent = @"Initials:";
        NSMutableParagraphStyle* currencyLabelStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        currencyLabelStyle.alignment = NSTextAlignmentCenter;

        NSDictionary* currencyLabelFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 8], NSForegroundColorAttributeName: labelStringColor, NSParagraphStyleAttributeName: currencyLabelStyle};

        CGFloat currencyLabelTextHeight = [textContent boundingRectWithSize: CGSizeMake(currencyLabelRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: currencyLabelFontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, currencyLabelRect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(currencyLabelRect), CGRectGetMinY(currencyLabelRect) + (CGRectGetHeight(currencyLabelRect) - currencyLabelTextHeight) / 2, CGRectGetWidth(currencyLabelRect), currencyLabelTextHeight) withAttributes: currencyLabelFontAttributes];
        CGContextRestoreGState(context);
    }


    //// Base Currency Input Drawing
    CGRect baseCurrencyInputRect = CGRectMake(58, 53, 44, 12);
    UIBezierPath* baseCurrencyInputPath = [UIBezierPath bezierPathWithRect: baseCurrencyInputRect];
    [baseColor setFill];
    [baseCurrencyInputPath fill];
    NSMutableParagraphStyle* baseCurrencyInputStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    baseCurrencyInputStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* baseCurrencyInputFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 8], NSForegroundColorAttributeName: stringColor, NSParagraphStyleAttributeName: baseCurrencyInputStyle};

    CGFloat baseCurrencyInputTextHeight = [baseCurrency boundingRectWithSize: CGSizeMake(baseCurrencyInputRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: baseCurrencyInputFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, baseCurrencyInputRect);
    [baseCurrency drawInRect: CGRectMake(CGRectGetMinX(baseCurrencyInputRect), CGRectGetMinY(baseCurrencyInputRect) + (CGRectGetHeight(baseCurrencyInputRect) - baseCurrencyInputTextHeight) / 2, CGRectGetWidth(baseCurrencyInputRect), baseCurrencyInputTextHeight) withAttributes: baseCurrencyInputFontAttributes];
    CGContextRestoreGState(context);


    //// Exchange Rate Input Drawing
    CGRect exchangeRateInputRect = CGRectMake(222, 45, 111, 28);
    UIBezierPath* exchangeRateInputPath = [UIBezierPath bezierPathWithRoundedRect: exchangeRateInputRect cornerRadius: 7];
    [exchangeRateColor setFill];
    [exchangeRateInputPath fill];
    NSMutableParagraphStyle* exchangeRateInputStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    exchangeRateInputStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* exchangeRateInputFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 12], NSForegroundColorAttributeName: exchangeRateStringColor, NSParagraphStyleAttributeName: exchangeRateInputStyle};

    CGFloat exchangeRateInputTextHeight = [exchangeRate boundingRectWithSize: CGSizeMake(exchangeRateInputRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: exchangeRateInputFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, exchangeRateInputRect);
    [exchangeRate drawInRect: CGRectMake(CGRectGetMinX(exchangeRateInputRect), CGRectGetMinY(exchangeRateInputRect) + (CGRectGetHeight(exchangeRateInputRect) - exchangeRateInputTextHeight) / 2, CGRectGetWidth(exchangeRateInputRect), exchangeRateInputTextHeight) withAttributes: exchangeRateInputFontAttributes];
    CGContextRestoreGState(context);


    //// Updated Label Drawing
    CGRect updatedLabelRect = CGRectMake(261, 100, 34, 13);
    UIBezierPath* updatedLabelPath = [UIBezierPath bezierPathWithRect: updatedLabelRect];
    [baseColor setFill];
    [updatedLabelPath fill];
    NSMutableParagraphStyle* updatedLabelStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    updatedLabelStyle.alignment = NSTextAlignmentLeft;

    NSDictionary* updatedLabelFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 8], NSForegroundColorAttributeName: stringColor, NSParagraphStyleAttributeName: updatedLabelStyle};

    [@"Updated:" drawInRect: updatedLabelRect withAttributes: updatedLabelFontAttributes];
}

@end
